{"version":3,"file":"jsforce-api-analytics.min.js","sources":["jsforce-api-analytics.js"],"names":["e","exports","module","define","amd","o","window","global","self","f","jsforce","modules","api","Analytics","t","n","r","s","u","a","require","i","Error","code","l","call","length",1,"_","ReportInstance","report","id","this","_report","_conn","prototype","retrieve","callback","conn","url","_baseUrl","join","_request","thenCall","Report","describe","run","exec","execute","options","isFunction","details","params","method","metadata","headers","Content-Type","body","JSON","stringify","executeAsync","instance","instances","reports","../promise",2,"process","Q","Promise","_promise","then","apply","arguments","res","nextTick","err","fail","done","when","reject","reason","all","defer","Deferred","_deferred","promise","resolve","_process","q",3,"noop","canSetImmediate","setImmediate","canPost","postMessage","addEventListener","queue","ev","source","data","stopPropagation","fn","shift","push","setTimeout","title","browser","env","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir",4,"definition","bootstrap","ses","ok","makeQ","uncurryThis","isObject","value","Object","isStopIteration","exception","object_toString","QReturnValue","makeStackTraceLong","error","hasStacks","stack","indexOf","STACK_JUMP_SEPARATOR","stacks","p","unshift","concatedStacks","filterStackString","stackString","lines","split","desiredLines","line","isInternalFrame","isNodeFrame","stackLine","getFileNameAndLineNumber","attempt1","Number","attempt2","attempt3","fileNameAndLineNumber","fileName","lineNumber","qFileName","qStartingLine","qEndingLine","captureLine","firstLine","deprecate","name","alternative","console","warn","isPromise","isPromiseAlike","coerce","fulfill","become","newPromise","resolvedPromise","array_reduce","messages","undefined","message","promiseDispatch","progressListeners","deferred","object_create","op","operands","args","array_slice","valueOf","nearerValue","nearer","inspect","state","longStackSupport","substring","notify","progress","progressListener","resolver","TypeError","race","answerPs","len","descriptor","fallback","result","inspected","fulfilled","rejected","progressed","object","isPending","isFulfilled","isRejected","displayUnhandledReasons","unhandledReasonsDisplayed","Touch","unhandledReasons","logUnhandledReasons","resetUnhandledRejections","unhandledRejections","trackUnhandledRejections","trackRejection","untrackRejection","at","array_indexOf","splice","rejection","get","set","rhs","delete","post","thisp","keys","object_keys","master","isDef","dispatch","spread","async","makeGenerator","continuer","verb","arg","hasES6Generators","generator","errback","bind","spawn","_return","promised","promises","countDown","index","snapshot","allResolved","array_map","allSettled","nodeify","nodeback","flush","head","next","task","domain","enter","isNodeJS","exit","flushing","tail","requestTick","MessageChannel","channel","port1","onmessage","requestPortTick","port2","Function","Array","slice","reduce","basis","map","collect","create","Type","object_hasOwnProperty","hasOwnProperty","key","toString","ReturnValue","makeNodeResolver","passByCopy","x","y","that","makePromise","_fulfilled","_rejected","newException","_progressed","newValue","threw","onerror","thenResolve","thenReject","getUnhandledReasons","stopUnhandledRejectionTracking","array","del","mapply","send","mcall","invoke","fapply","fcall","fbind","concat","regardless","fin","onUnhandledError","timeout","ms","timeoutId","clearTimeout","delay","nfapply","nodeArgs","nfcall","nfbind","denodeify","baseArgs","nbind","bound","nmapply","npost","nsend","nmcall","ninvoke"],"mappings":"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","sourcesContent":["!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var o;\"undefined\"!=typeof window?o=window:\"undefined\"!=typeof global?o=global:\"undefined\"!=typeof self&&(o=self);var f=o;f=f.jsforce||(f.jsforce={}),f=f.modules||(f.modules={}),f=f.api||(f.api={}),f.Analytics=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @file Manages Salesforce Analytics API\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\nvar _        = jsforce.require('underscore')._,\n    Promise  = require('../promise');\n\n/**\n * Report instance to retrieving asynchronously executed result\n *\n * @protected\n * @class Analytics~ReportInstance\n * @param {Analytics~Report} report - Report\n * @param {String} id - Report instance id\n */\nvar ReportInstance = function(report, id) {\n  this._report = report;\n  this._conn = report._conn;\n  this.id = id;\n};\n\n/**\n * Retrieve report result asynchronously executed\n *\n * @method Analytics~ReportInstance#retrieve\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportResult>}\n */\nReportInstance.prototype.retrieve = function(callback) {\n  var conn = this._conn,\n      report = this._report;\n  var url = [ conn._baseUrl(), \"analytics\", \"reports\", report.id, \"instances\", this.id ].join('/');\n  return conn._request(url).thenCall(callback);\n};\n\n/**\n * Report object in Analytics API\n *\n * @protected\n * @class Analytics~Report\n * @param {Connection} conn Connection\n */\nvar Report = function(conn, id) {\n  this._conn = conn;\n  this.id = id;\n};\n\n/**\n * Describe report metadata\n *\n * @method Analytics~Report#describe\n * @param {Callback.<Analytics~ReportMetadata>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportMetadata>}\n */\nReport.prototype.describe = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"describe\" ].join('/');\n  return this._conn._request(url).thenCall(callback);\n};\n\n/**\n * Run report synchronously\n *\n * @method Analytics~Report#execute\n * @param {Object} [options] - Options\n * @param {Boolean} options.details - Flag if include detail in result\n * @param {Analytics~ReportMetadata} options.metadata - Overriding report metadata\n * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportResult>}\n */\nReport.prototype.run = \nReport.prototype.exec = \nReport.prototype.execute = function(options, callback) {\n  options = options || {};\n  if (_.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id ].join('/');\n  if (options.details) {\n    url += \"?includeDetails=true\";\n  }\n  var params = { method : options.metadata ? 'POST' : 'GET', url : url };\n  if (options.metadata) {\n    params.headers = { \"Content-Type\" : \"application/json\" };\n    params.body = JSON.stringify(options.metadata);\n  }\n  return this._conn._request(params).thenCall(callback);\n};\n\n/**\n * Run report asynchronously\n *\n * @method Analytics~Report#executeAsync\n * @param {Object} [options] - Options\n * @param {Boolean} options.details - Flag if include detail in result\n * @param {Analytics~ReportMetadata} options.metadata - Overriding report metadata\n * @param {Callback.<Analytics~ReportInstanceAttrs>} [callback] - Callback function\n * @returns {Promise.<Analytics~ReportInstanceAttrs>}\n */\nReport.prototype.executeAsync = function(options, callback) {\n  options = options || {};\n  if (_.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"instances\" ].join('/');\n  if (options.details) {\n    url += \"?includeDetails=true\";\n  }\n  var params = { method : 'POST', url : url, body: \"\" };\n  if (options.metadata) {\n    params.headers = { \"Content-Type\" : \"application/json\" };\n    params.body = JSON.stringify(options.metadata);\n  }\n  return this._conn._request(params).thenCall(callback);\n};\n\n/**\n * Get report instance for specified instance ID\n *\n * @method Analytics~Report#instance\n * @param {String} id - Report instance ID\n * @returns {Analytics~ReportInstance}\n */\nReport.prototype.instance = function(id) {\n  return new ReportInstance(this, id);\n};\n\n/**\n * List report instances which had been executed asynchronously\n *\n * @method Analytics~Report#instances\n * @param {Callback.<Array.<Analytics~ReportInstanceAttrs>>} [callback] - Callback function\n * @returns {Promise.<Array.<Analytics~ReportInstanceAttrs>>}\n */\nReport.prototype.instances = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"instances\" ].join('/');\n  return this._conn._request(url).thenCall(callback);\n};\n\n\n/**\n * API class for Analytics API\n *\n * @class\n * @param {Connection} conn Connection\n */\nvar Analytics = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * Get report object of Analytics API\n *\n * @param {String} id - Report Id\n * @returns {Analytics~Report}\n */\nAnalytics.prototype.report = function(id) {\n  return new Report(this._conn, id);\n};\n\n/**\n * Get recent report list\n *\n * @param {Callback.<Array.<Analytics~ReportInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<Analytics~ReportInfo>>}\n */\nAnalytics.prototype.reports = function(callback) {\n  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\" ].join('/');\n  return this._conn._request(url).thenCall(callback);\n};\n\nmodule.exports = Analytics;\n\n},{\"../promise\":2}],2:[function(require,module,exports){\n(function (process){\n/*global process*/\nvar Q = require('q'),\n    _ = jsforce.require('underscore')._;\n\n/**\n * Promises/A+ spec compliant class, with a little extension\n * http://promises-aplus.github.io/promises-spec/\n *\n * @class Promise\n * @constructor\n * @param {Promise.<T>|T} o - Object to wrap with promise\n * @template T\n */\nvar Promise = function(o) {\n  this._promise = Q(o);\n};\n\n/**\n * @callback FulfilledCallback\n * @param {T} result - Fulfilled value\n * @returns {S}\n * @template T,S\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * The \"then\" method from the Promises/A+ specification\n *\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\nPromise.prototype.then = function() {\n  // Delegate Q promise implementation and wrap by our Promise instance\n  return new Promise(this._promise.then.apply(this._promise, arguments));\n};\n\n/**\n * Call \"then\" using given node-style callback function\n *\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Promise}\n */\nPromise.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/**\n * A sugar method, equivalent to promise.then(undefined, onRejected).\n *\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\nPromise.prototype.fail = function() {\n  return new Promise(this._promise.fail.apply(this._promise, arguments));\n};\n\n/**\n * Alias for completion\n *\n * @param {FulfilledCallback.<T, S>} [onFulfilled]\n * @returns {Promise.<S>}\n */\nPromise.prototype.done = function() {\n  return new Promise(this._promise.done.apply(this._promise, arguments));\n};\n\n/**\n * @param {...Promise.<*>} p\n */\nPromise.when = function() {\n  return new Promise(Q.when.apply(Q, arguments));\n};\n\n/**\n * Returns rejecting promise with given reason\n *\n * @param {Error} reason - Rejecting reason\n * @returns {Promise}\n */\nPromise.reject = function(reason) {\n  return new Promise(Q.reject(reason));\n};\n\n/**\n * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise, \n * or is rejected with the same rejection reason as the first promise to be rejected.\n *\n * @param {Array.<Promise.<*>|*>} promises\n * @returns {Promise.<Array.<*>>}\n */\nPromise.all = function() {\n  return new Promise(Q.all.apply(Q, arguments));\n};\n\n/**\n * Returns a deferred object\n *\n * @returns {Deferred}\n */\nPromise.defer = function() {\n  return new Deferred();\n};\n\n/**\n * Deferred object\n *\n * @protected\n * @constructor\n */\nvar Deferred = function() {\n  this._deferred = Q.defer();\n  this.promise = new Promise(this._deferred.promise);\n};\n\n/**\n * Resolve promise\n * @param {*} result - Resolving result\n */\nDeferred.prototype.resolve = function() {\n  return this._deferred.resolve.apply(this._promise, arguments);\n};\n\n/**\n * Reject promise\n * @param {Error} error - Rejecting reason\n */\nDeferred.prototype.reject = function() {\n  return this._deferred.reject.apply(this._promise, arguments);\n};\n\n/**\n *\n */\nmodule.exports = Promise;\n\n}).call(this,require('_process'))\n},{\"_process\":3,\"q\":4}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],4:[function(require,module,exports){\n(function (process){\n// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    // Turn off strict mode for this function so we can assign to global.Q\n    /* jshint strict: false */\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else {\n        Q = definition();\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n\n    function flush() {\n        /* jshint loopfunc: true */\n\n        while (head.next) {\n            head = head.next;\n            var task = head.task;\n            head.task = void 0;\n            var domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n\n            try {\n                task();\n\n            } catch (e) {\n                if (isNodeJS) {\n                    // In node, uncaught exceptions are considered fatal errors.\n                    // Re-throw them synchronously to interrupt flushing!\n\n                    // Ensure continuation if the uncaught exception is suppressed\n                    // listening \"uncaughtException\" events (as domains does).\n                    // Continue in next event to avoid tick recursion.\n                    if (domain) {\n                        domain.exit();\n                    }\n                    setTimeout(flush, 0);\n                    if (domain) {\n                        domain.enter();\n                    }\n\n                    throw e;\n\n                } else {\n                    // In browsers, uncaught exceptions are not fatal.\n                    // Re-throw them asynchronously to avoid slow-downs.\n                    setTimeout(function() {\n                       throw e;\n                    }, 0);\n                }\n            }\n\n            if (domain) {\n                domain.exit();\n            }\n        }\n\n        flushing = false;\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process !== \"undefined\" && process.nextTick) {\n        // Node.js before 0.9. Note that some fake-Node environments, like the\n        // Mocha test runner, introduce a `process` global without a `nextTick`.\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this does have the nice side-effect of reducing the size\n// of the code by reducing x.call() to merely x(), eliminating many\n// hard-to-minify characters.\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n// engine that has a deployed base of browsers that support generators.\n// However, SM's generators use the Python-inspired semantics of\n// outdated ES6 drafts.  We would like to support ES6, but we'd also\n// like to make it possible to use generators in deployed browsers, so\n// we also support Python-style generators.  At some point we can remove\n// this block.\nvar hasES6Generators;\ntry {\n    /* jshint evil: true, nonew: false */\n    new Function(\"(function* (){ yield 1; })\");\n    hasES6Generators = true;\n} catch (e) {\n    hasES6Generators = false;\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (isPromise(value)) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = deprecate(function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    }, \"valueOf\", \"inspect\");\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become fulfilled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be fulfilled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function(resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function(answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = deprecate(function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        });\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return isObject(object) &&\n        typeof object.promiseDispatch === \"function\" &&\n        typeof object.inspect === \"function\";\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar unhandledReasonsDisplayed = false;\nvar trackUnhandledRejections = true;\nfunction displayUnhandledReasons() {\n    if (\n        !unhandledReasonsDisplayed &&\n        typeof window !== \"undefined\" &&\n        !window.Touch &&\n        window.console\n    ) {\n        console.warn(\"[Q] Unhandled rejection reasons (should be empty):\",\n                     unhandledReasons);\n    }\n\n    unhandledReasonsDisplayed = true;\n}\n\nfunction logUnhandledReasons() {\n    for (var i = 0; i < unhandledReasons.length; i++) {\n        var reason = unhandledReasons[i];\n        console.warn(\"Unhandled rejection reason:\", reason);\n    }\n}\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n    unhandledReasonsDisplayed = false;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n\n        // Show unhandled rejection reasons if Node exits without handling an\n        // outstanding rejection.  (Note that Browserify presently produces a\n        // `process` global without the `EventEmitter` `on` method.)\n        if (typeof process !== \"undefined\" && process.on) {\n            process.on(\"exit\", logUnhandledReasons);\n        }\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n    displayUnhandledReasons();\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    if (typeof process !== \"undefined\" && process.on) {\n        process.removeListener(\"exit\", logUnhandledReasons);\n    }\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n            if (hasES6Generators) {\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return result.value;\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return exception.value;\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var countDown = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++countDown;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--countDown === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (countDown === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {String} custom error message (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, message) {\n    return Q(object).timeout(ms, message);\n};\n\nPromise.prototype.timeout = function (ms, message) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        deferred.reject(new Error(message || \"Timed out after \" + ms + \" ms\"));\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n\n}).call(this,require('_process'))\n},{\"_process\":3}]},{},[1])(1)\n});"]}