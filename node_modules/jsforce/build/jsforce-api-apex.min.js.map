{"version":3,"file":"jsforce-api-apex.min.js","sources":["jsforce-api-apex.js"],"names":["e","exports","module","define","amd","o","window","global","self","f","jsforce","modules","api","Apex","t","n","r","s","u","a","require","i","Error","code","l","call","length",1,"conn","this","_conn","prototype","_baseUrl","instanceUrl","_createRequestParams","method","path","body","params","url","test","headers","Content-Type","JSON","stringify","get","callback","_request","thenCall","post","undefined","put","patch","del"],"mappings":";CAAC,SAASA,GAAG,GAAG,gBAAiBC,UAAS,mBAAoBC,QAAOA,OAAOD,QAAQD,QAAS,IAAG,kBAAmBG,SAAQA,OAAOC,IAAID,UAAUH,OAAO,CAAC,GAAIK,EAAE,oBAAoBC,QAAOD,EAAEC,OAAO,mBAAoBC,QAAOF,EAAEE,OAAO,mBAAoBC,QAAOH,EAAEG,KAAM,IAAIC,GAAEJ,CAAEI,GAAEA,EAAEC,UAAUD,EAAEC,YAAYD,EAAEA,EAAEE,UAAUF,EAAEE,YAAYF,EAAEA,EAAEG,MAAMH,EAAEG,QAAQH,EAAEI,KAAKb,MAAM,WAAqC,MAAO,SAAUA,GAAEc,EAAEC,EAAEC,GAAG,QAASC,GAAEZ,EAAEa,GAAG,IAAIH,EAAEV,GAAG,CAAC,IAAIS,EAAET,GAAG,CAAC,GAAIc,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEd,GAAE,EAAI,IAAGgB,EAAE,MAAOA,GAAEhB,GAAE,EAAI,IAAII,GAAE,GAAIa,OAAM,uBAAuBjB,EAAE,IAAK,MAAMI,GAAEc,KAAK,mBAAmBd,EAAE,GAAIe,GAAET,EAAEV,IAAIJ,WAAYa,GAAET,GAAG,GAAGoB,KAAKD,EAAEvB,QAAQ,SAASD,GAAG,GAAIe,GAAED,EAAET,GAAG,GAAGL,EAAG,OAAOiB,GAAEF,EAAEA,EAAEf,IAAIwB,EAAEA,EAAEvB,QAAQD,EAAEc,EAAEC,EAAEC,GAAG,MAAOD,GAAEV,GAAGJ,QAAkD,IAAI,GAA1CoB,GAAkB,kBAATD,UAAqBA,QAAgBf,EAAE,EAAEA,EAAEW,EAAEU,OAAOrB,IAAIY,EAAED,EAAEX,GAAI,OAAOY,KAAKU,GAAG,SAASP,EAAQlB,GAYt2B,GAAIW,GAAO,SAASe,GAClBC,KAAKC,MAAQF,EAMff,GAAKkB,UAAUC,SAAW,WACxB,MAAOH,MAAKC,MAAMG,YAAc,sBAMlCpB,EAAKkB,UAAUG,qBAAuB,SAASC,EAAQC,EAAMC,GAC3D,GAAIC,IACFH,OAAQA,EACRI,IAAKV,KAAKG,WAAaI,EAUzB,OARK,kBAAkBI,KAAKL,KAC1BG,EAAOG,SACLC,eAAiB,qBAGjBL,IACFC,EAAOD,KAAOM,KAAKC,UAAUP,IAExBC,GAUTzB,EAAKkB,UAAUc,IAAM,SAAST,EAAMU,GAClC,MAAOjB,MAAKC,MAAMiB,SAASlB,KAAKK,qBAAqB,MAAOE,IAAOY,SAASF,IAW9EjC,EAAKkB,UAAUkB,KAAO,SAASb,EAAMC,EAAMS,GACrB,kBAATT,KACTS,EAAWT,EACXA,EAAOa,OAET,IAAIZ,GAAST,KAAKK,qBAAqB,OAAQE,EAAMC,EACrD,OAAOR,MAAKC,MAAMiB,SAAST,GAAQU,SAASF,IAW9CjC,EAAKkB,UAAUoB,IAAM,SAASf,EAAMC,EAAMS,GACpB,kBAATT,KACTS,EAAWT,EACXA,EAAOa,OAET,IAAIZ,GAAST,KAAKK,qBAAqB,MAAOE,EAAMC,EACpD,OAAOR,MAAKC,MAAMiB,SAAST,GAAQU,SAASF,IAW9CjC,EAAKkB,UAAUqB,MAAQ,SAAShB,EAAMC,EAAMS,GACtB,kBAATT,KACTS,EAAWT,EACXA,EAAOa,OAET,IAAIZ,GAAST,KAAKK,qBAAqB,QAASE,EAAMC,EACtD,OAAOR,MAAKC,MAAMiB,SAAST,GAAQU,SAASF,IAuB9CjC,EAAKkB,UAAUsB,IACfxC,EAAKkB,UAAU,UAAY,SAASK,EAAMU,GACxC,MAAOjB,MAAKC,MAAMiB,SAASlB,KAAKK,qBAAqB,SAAUE,IAAOY,SAASF,IAIjF5C,EAAOD,QAAUY,YAEN,IAAI","sourcesContent":["!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var o;\"undefined\"!=typeof window?o=window:\"undefined\"!=typeof global?o=global:\"undefined\"!=typeof self&&(o=self);var f=o;f=f.jsforce||(f.jsforce={}),f=f.modules||(f.modules={}),f=f.api||(f.api={}),f.Apex=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @file Manages Salesforce Apex REST endpoint calls\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n/**\n * API class for Apex REST endpoint call\n *\n * @class\n * @param {Connection} conn Connection\n */\nvar Apex = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @private\n */\nApex.prototype._baseUrl = function() {\n  return this._conn.instanceUrl + \"/services/apexrest\";\n};\n\n/**\n * @private\n */\nApex.prototype._createRequestParams = function(method, path, body) {\n  var params = {\n    method: method,\n    url: this._baseUrl() + path\n  };\n  if (!/^(GET|DELETE)$/i.test(method)) {\n    params.headers = {\n      \"Content-Type\" : \"application/json\"\n    };\n  }\n  if (body) {\n    params.body = JSON.stringify(body);\n  }\n  return params;\n};\n\n/**\n * Call Apex REST service in GET request\n *\n * @param {String} path - URL path to Apex REST service\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nApex.prototype.get = function(path, callback) {\n  return this._conn._request(this._createRequestParams('GET', path)).thenCall(callback);\n};\n\n/**\n * Call Apex REST service in POST request\n *\n * @param {String} path - URL path to Apex REST service\n * @param {Object} [body] - Request body\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nApex.prototype.post = function(path, body, callback) {\n  if (typeof body === 'function') {\n    callback = body;\n    body = undefined;\n  }\n  var params = this._createRequestParams('POST', path, body);\n  return this._conn._request(params).thenCall(callback);\n};\n\n/**\n * Call Apex REST service in PUT request\n *\n * @param {String} path - URL path to Apex REST service\n * @param {Object} [body] - Request body\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nApex.prototype.put = function(path, body, callback) {\n  if (typeof body === 'function') {\n    callback = body;\n    body = undefined;\n  }\n  var params = this._createRequestParams('PUT', path, body);\n  return this._conn._request(params).thenCall(callback);\n};\n\n/**\n * Call Apex REST service in PATCH request\n *\n * @param {String} path - URL path to Apex REST service\n * @param {Object} [body] - Request body\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nApex.prototype.patch = function(path, body, callback) {\n  if (typeof body === 'function') {\n    callback = body;\n    body = undefined;\n  }\n  var params = this._createRequestParams('PATCH', path, body);\n  return this._conn._request(params).thenCall(callback);\n};\n\n/**\n * Synonym of Apex#delete()\n *\n * @method Apex#del\n *\n * @param {String} path - URL path to Apex REST service\n * @param {Object} [body] - Request body\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\n/**\n * Call Apex REST service in DELETE request\n *\n * @method Apex#delete\n *\n * @param {String} path - URL path to Apex REST service\n * @param {Object} [body] - Request body\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nApex.prototype.del =\nApex.prototype[\"delete\"] = function(path, callback) {\n  return this._conn._request(this._createRequestParams('DELETE', path)).thenCall(callback);\n};\n\n\nmodule.exports = Apex;\n\n},{}]},{},[1])(1)\n});"]}