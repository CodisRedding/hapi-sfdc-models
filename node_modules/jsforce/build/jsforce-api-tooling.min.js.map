{"version":3,"file":"jsforce-api-tooling.min.js","sources":["jsforce-api-tooling.js"],"names":["e","exports","module","define","amd","o","window","global","self","f","jsforce","modules","api","Tooling","t","n","r","s","u","a","require","i","Error","code","l","call","length",1,"_","Cache","conn","this","_conn","_logger","delegates","forEach","method","constructor","prototype","cache","cacheOptions","key","type","describe$","makeCacheable","describe","makeResponseCacheable","describeSObject$","describeSObject","describeGlobal$","describeGlobal","initialize","sobjects","clear","get","on","bind","res","result","types","map","so","name","each","sobject","_baseUrl","urls","rest","base","_request","apply","arguments","executeAnonymous","body","callback","url","encodeURIComponent","thenCall","completions","isString","../cache",2,"createCacheKey","namespace","args","Array","slice","JSON","stringify","join","events","inherits","CacheEntry","fetching","EventEmitter","once","isUndefined","_value","emit","set","value","_entries","entry","k","indexOf","fn","scope","options","pop","isFunction","push","err","error","ret","then","undefined","$fn",3,"Object","create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor"],"mappings":"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","sourcesContent":["!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var o;\"undefined\"!=typeof window?o=window:\"undefined\"!=typeof global?o=global:\"undefined\"!=typeof self&&(o=self);var f=o;f=f.jsforce||(f.jsforce={}),f=f.modules||(f.modules={}),f=f.api||(f.api={}),f.Tooling=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @file Manages Tooling APIs\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\nvar util  = jsforce.require('util'),\n    _     = jsforce.require('underscore')._,\n    Cache = require('../cache');\n\n/**\n * API class for Tooling API call\n *\n * @class\n * @param {Connection} conn - Connection\n */\nvar Tooling = function(conn) {\n  this._conn = conn;\n  this._logger = conn._logger;\n  var delegates = [\n    \"query\",\n    \"queryMore\",\n    \"create\",\n    \"insert\",\n    \"retrieve\",\n    \"update\",\n    \"upsert\",\n    \"del\",\n    \"delete\",\n    \"destroy\",\n    \"describe\",\n    \"describeGlobal\",\n    \"sobject\"\n  ];\n  delegates.forEach(function(method) {\n    this[method] = conn.constructor.prototype[method];\n  }, this);\n\n  this.cache = new Cache();\n\n  var cacheOptions = {\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\n  };\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n  this.describeSObject$ = this.describe$;\n  this.describeSObject = this.describe;\n\n  cacheOptions = { key: 'describeGlobal' };\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\n\n  this.initialize();\n};\n\n/**\n * Initialize tooling API\n * @protected\n */\nTooling.prototype.initialize = function() {\n  this.sobjects = {};\n  this.cache.clear();\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\n    if (res.result) {\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\n      _.each(types, this.sobject, this);\n    }\n  }, this));\n};\n\n/**\n * @private\n */\nTooling.prototype._baseUrl = function() {\n  return this._conn.urls.rest.base + \"/tooling\";\n};\n\n/**\n * @private\n */\nTooling.prototype._request = function() {\n  return this._conn._request.apply(this._conn, arguments);\n};\n\n/**\n * Execute query by using SOQL\n * \n * @param {String} soql - SOQL string\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\n/**\n * Query next record set by using query locator\n *\n * @method Tooling#query\n * @param {String} locator - Next record set locator\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\n/**\n * Retrieve specified records\n *\n * @method Tooling#queryMore\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A record ID or array of record IDs \n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\n\n/**\n * Synonym of Tooling#create()\n *\n * @method Tooling#insert\n * @param {String} type - SObject Type\n * @param {Object|Array.<Object>} records - A record or array of records to create\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method Tooling#create\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n\n/**\n * Update records\n *\n * @method Tooling#update\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n\n/**\n * Upsert records\n *\n * @method Tooling#upsert\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n\n/**\n * Synonym of Tooling#destroy()\n *\n * @method Tooling#delete\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of Tooling#destroy()\n *\n * @method Tooling#del\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method Tooling#destroy\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n\n/**\n * Synonym of Tooling#describe()\n *\n * @method Tooling#describeSObject\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\n/**\n * Describe SObject metadata\n *\n * @method Tooling#describe\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\n\n/**\n * Describe global SObjects\n *\n * @method Tooling#describeGlobal\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\n * @returns {Promise.<DescribeGlobalResult>}\n */\n\n/**\n * Get SObject instance\n *\n * @method Tooling#sobject\n * @param {String} type - SObject Type\n * @returns {SObject}\n */\n\n/**\n * @typedef {Object} Tooling~ExecuteAnonymousResult\n * @prop {Boolean} compiled - Flag if the query is compiled successfully\n * @prop {String} compileProblem - Error reason in compilation\n * @prop {Boolean} success - Flag if the code is executed successfully\n * @prop {Number} line - Line number for the error\n * @prop {Number} column - Column number for the error\n * @prop {String} exceptionMessage - Exception message\n * @prop {String} exceptionStackTrace - Exception stack trace\n */\n/**\n * Executes Apex code anonymously\n *\n * @param {String} body - Anonymous Apex code\n * @param {Callback.<Tooling~ExecuteAnonymousResult>} [callback] - Callback function\n * @returns {Promise.<Tooling~ExecuteAnonymousResult>}\n */\nTooling.prototype.executeAnonymous = function(body, callback) {\n  var url = this._baseUrl() + \"/executeAnonymous?anonymousBody=\" + encodeURIComponent(body);\n  return this._request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Tooling~CompletionsResult\n * @prop {Object} publicDeclarations\n */\n/**\n * Retrieves available code completions of the referenced type\n *\n * @param {String} [type] - completion type (default 'apex')\n * @param {Callback.<Tooling~CompletionsResult>} [callback] - Callback function\n * @returns {Promise.<Tooling~CompletionsResult>}\n */\nTooling.prototype.completions = function(type, callback) {\n  if (!_.isString(type)) {\n    callback = type;\n    type = 'apex';\n  }\n  var url = this._baseUrl() + \"/completions?type=\" + encodeURIComponent(type);\n  return this._request(url).thenCall(callback);\n};\n\n\nmodule.exports = Tooling;\n\n},{\"../cache\":2}],2:[function(require,module,exports){\n/**\n * @file Manages asynchronous method response cache\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nvar events = jsforce.require('events'),\n    inherits = require('inherits'),\n    _      = jsforce.require('underscore')._;\n\n/**\n * Class for managing cache entry\n *\n * @private\n * @class\n * @constructor\n * @template T\n */\nvar CacheEntry = function() {\n  this.fetching = false;\n};\n\ninherits(CacheEntry, events.EventEmitter);\n\n/**\n * Get value in the cache entry\n *\n * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated\n * @returns {T|undefined}\n */\nCacheEntry.prototype.get = function(callback) {\n  if (!callback) {\n    return this._value;\n  } else {\n    this.once('value', callback);\n    if (!_.isUndefined(this._value)) {\n      this.emit('value', this._value);\n    }\n  }\n};\n\n/**\n * Set value in the cache entry\n *\n * @param {T} [value] - A value for caching\n */\nCacheEntry.prototype.set = function(value) {\n  this._value = value;\n  this.emit('value', this._value);\n};\n\n/**\n * Clear cached value\n */\nCacheEntry.prototype.clear = function() {\n  this.fetching = false;\n  delete this._value;\n};\n\n\n/**\n * Caching manager for async methods\n *\n * @class\n * @constructor\n */\nvar Cache = function() {\n  this._entries = {};\n};\n\n/**\n * retrive cache entry, or create if not exists.\n *\n * @param {String} [key] - Key of cache entry\n * @returns {CacheEntry}\n */\nCache.prototype.get = function(key) {\n  if (key && this._entries[key]) {\n    return this._entries[key];\n  } else {\n    var entry = new CacheEntry();\n    this._entries[key] = entry;\n    return entry;\n  }\n};\n\n/**\n * clear cache entries prefix matching given key\n * @param {String} [key] - Key prefix of cache entry to clear\n */\nCache.prototype.clear = function(key) {\n  for (var k in this._entries) {\n    if (!key || k.indexOf(key) === 0) {\n      this._entries[k].clear();\n    }\n  }\n};\n\n/**\n * create and return cache key from namespace and serialized arguments.\n * @private\n */\nfunction createCacheKey(namespace, args) {\n  args = Array.prototype.slice.apply(args);\n  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';\n}\n\n/**\n * Enable caching for async call fn to intercept the response and store it to cache.\n * The original async calll fn is always invoked.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeResponseCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  return function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n      callback = null;\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    entry.fetching = true;\n    if (callback) {\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n        callback(err, result);\n      });\n    }\n    var ret, error;\n    try {\n      ret = fn.apply(scope || this, args);\n    } catch(e) {\n      error = e;\n    }\n    if (ret && _.isFunction(ret.then)) { // if the returned value is promise\n      if (!callback) {\n        return ret.then(function(result) {\n          entry.set({ error: undefined, result: result });\n          return result;\n        }, function(err) {\n          entry.set({ error: err, result: undefined });\n          throw err;\n        });\n      } else {\n        return ret;\n      }\n    } else {\n      entry.set({ error: error, result: ret });\n      if (error) { throw error; }\n      return ret;\n    }\n  };\n};\n\n/**\n * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  var $fn = function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).\n      var value = entry.get();\n      if (!value) { throw new Error('Function call result is not cached yet.'); }\n      if (value.error) { throw value.error; }\n      return value.result;\n    }\n    entry.get(function(value) {\n      callback(value.error, value.result);\n    });\n    if (!entry.fetching) { // only when no other client is calling function\n      entry.fetching = true;\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n      });\n      fn.apply(scope || this, args);\n    }\n  };\n  $fn.clear = function() {\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, arguments) :\n              createCacheKey(options.namespace, arguments);\n    cache.clear(key);\n  };\n  return $fn;\n};\n\n\nmodule.exports = Cache;\n\n},{\"inherits\":3}],3:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}]},{},[1])(1)\n});"]}